<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>planes = ds_list_create()

selected = ds_list_create()
global.warp = 1;

for(i = 0; i &lt; instance_number(Plane); i ++){
    inst = instance_find(Plane, i)
    ds_list_add(planes, inst)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( mouse_check_button_pressed(mb_left)){
    if(!keyboard_check(vk_shift)){
        ds_list_clear(selected);
    }
    for(i = 0; i &lt; ds_list_size(planes); i++){
        inst = ds_list_find_value(planes, i)
        if( point_distance(inst.x, inst.y, mouse_x, mouse_y) &lt; 5){
            ds_list_add(selected, inst);
        }
    }
}

if(mouse_check_button_pressed(mb_right)){
    for(i = 0; i &lt; ds_list_size(selected); i++){
        inst = ds_list_find_value(selected, i)
        if(inst.trgt == noone){
            inst.trgt = instance_create(mouse_x, mouse_y, Target)
        } else {
            var t = inst.trgt
            while(t.next != noone){
                t = t.next
            }
            t.next = instance_create(mouse_x, mouse_y, Target)
        }
    }
}

if(keyboard_check(vk_space)){
    global.warp = 0
} else {
    global.warp = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_aqua);
for(i = 0; i &lt; ds_list_size(selected); i ++){
    inst = ds_list_find_value(selected, i);
    draw_circle(inst.x, inst.y, 7, true)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
