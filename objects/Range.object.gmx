<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite2</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>contains = ds_list_create()
parent = noone
freq = 1
frame = 0

calc = Arc_Collision
x1 = -30
y1 = 30
x2 = 100
y2 = 10

ofstX = 0
ofstY = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( (frame mod freq) == 0){
    ds_list_clear(contains)
    for(i = 0; i &lt; instance_number(Plane); i ++){
        inst = instance_find(Plane, i)
        if ( script_execute(calc, inst, x1, y1, x2, y2) ){
            ds_list_add( contains, inst )
        }
    }
}
frame ++

if(parent != noone and instance_exists(parent)){
    image_angle = parent.image_angle;
    x = parent.x + ofstX*dsin(image_angle)
    y = parent.y + ofstX*dcos(image_angle)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_red)

draw_circle(x,y,x2,true)
draw_circle(x,y,y2,true)
draw_line(x + dcos(x1-image_angle)*x2, y + dsin(x1-image_angle)*x2,
    x + dcos(x1-image_angle)*y2, y + dsin(x1-image_angle)*y2)
draw_line(x + dcos(y1-image_angle)*x2, y + dsin(y1-image_angle)*x2,
    x + dcos(y1-image_angle)*y2, y + dsin(y1-image_angle)*y2)

for(i = 0; i &lt; ds_list_size(contains); i ++ ) {
    inst = ds_list_find_value(contains, i)
    draw_circle(inst.x, inst.y, 5, false)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
