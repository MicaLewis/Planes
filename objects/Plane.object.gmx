<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_overlay(true)

//controller = true
dead = false

trgt = noone;
controller = noone;
hlth = 100
radius = 0;
anglTo = 0;
maxspd = 2;
minspd = .5;
spd = 1;
angl = 0;
anglSpd = 1;
team = 0;
//drag = 10;

var wep = instance_create(x, y, Weapon);
wep.plane = id
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///plane movement

if(hlth &lt;= 0){
    dead = true;
    clear_targets(trgt)
    controller_delete(controller, id)
}

if(fps != 0) timespd = global.warp * 60/fps
else timespd = global.warp


if(!global.pause and !dead){
    script_execute(plane_generic)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = angl

//draw_sprite_ext(sprite_index, -1, x, y, 1, 1, angl, c_white, 255)
if(!dead){
    draw_set_colour(c_black)
    draw_sprite_ext(sprite_index, -1, x, y, 1, 1, angl, c_white, 255)
    if(trgt != noone)
        draw_line(x,y,trgt.x,trgt.y)
} else {
    draw_set_colour(c_red)
    draw_line(x+5,y+5,x-5,y-5)
    draw_line(x+5,y-5,x-5,y+5)
}
 
if( trgt != noone and trgt.next != noone ) {
    theta = toPlane + angle_difference(toNext, toPlane)/2
    d = point_distance(0,0,effectiveDist,radius)
    //draw_circle(trgt.x + d*dcos(theta), trgt.y - d*dsin(theta), radius, true)
    draw_arc(trgt.x + d*dcos(theta), trgt.y - d*dsin(theta), radius,
        toPlane - 90*sign(angle_difference(toNext, toPlane)),
        toNext + 90*sign(angle_difference(toNext, toPlane)))
}

draw_line(x, y, x + 20*dcos(angl), y - 20*dsin(angl))
if(abs(anglTo) &gt; 1)
        draw_circle( x + dcos(angl+90*sign(anglTo))*radius,
            y + dsin(angl-90*sign(anglTo))*radius, radius, true)
            
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
