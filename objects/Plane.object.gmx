<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_overlay(true)

trgts = ds_queue_create()

radius = 0;
anglTo = 0;
maxspd = 5;
minspd = 1;
spd = 5;
angl = 0;
anglSpd = 3;
//drag = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(mouse_check_button_pressed(mb_right)){
    if(!keyboard_check(vk_shift)){
        while(ds_queue_head(trgts) != 0){
            trgt = ds_queue_dequeue(trgts)
            with(trgt) instance_destroy()
        }
    }
    trgt = ds_queue_tail(trgts)
    new = instance_create(mouse_x, mouse_y, Target)
    if(trgt == 0)
        new.next = id
    else
        new.next = trgt
    ds_queue_enqueue(trgts, new)
}

trgt = ds_queue_head(trgts)
radius = 180/anglSpd*spd/pi

if(trgt != 0){
    anglTo = angle_difference(point_direction(x, y, trgt.x, trgt.y), angl)
    angl += min(abs(anglTo), anglSpd) * sign(anglTo)
    inRadius = point_distance(trgt.x, trgt.y,
        x + dcos(angl+90*sign(anglTo))*radius,
        y + dsin(angl-90*sign(anglTo))*radius) &lt; radius
    if(inRadius){
        spd -= min(.05, spd-minspd)
    } else {
        spd += min(.05, maxspd-spd)
    }
    if(point_distance(x,y,trgt.x,trgt.y) &lt; spd or (spd == minspd and inRadius)){
        trgt = ds_queue_dequeue(trgts)
        with(trgt) instance_destroy();
        trgt = ds_queue_head(trgts)
        trgt.next = id
    }
} else {
    angl += anglSpd
    spd += min(.05, maxspd-spd)
}

x += dcos(angl)*spd
y -= dsin(angl)*spd

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, -1, x, y, 1, 1, angl, c_white, 1)

//draw_circle( x + dcos(angl+90*sign(anglTo))*radius,
//    y + dsin(angl-90*sign(anglTo))*radius, radius, true )
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
